type R = [16]
type T = [16]
type F = [32] // Fixed point

_T = [0 .. 44099]:[_]T

pi_sa = 0:F             //0.000071237928653

tof : R -> F
tof a = pi_sa // a * pi_sa

fromf : F -> R
fromf a = 1:R

mul : (F, F) -> F
mul (a, b) = a * b

div : (F, F) -> F
div (a, b) = a / b

// Improve this
mdf : {n} (fin n) => (F, [n]F) -> F
mdf (a, b) = ys ! 0
    where ys = [a] # [ mul(div(a, x), y) | x <- b
                                         | y <- ys
                     ]

// Extremely approximate sin
sin : F -> F
sin x = x - mdf(x, [2..3]) + mdf(x, [2..5]) - mdf(x, [2..7])

//y(t)=Asin(2pft+o)

channel : T -> R
channel t = fromf(sin(tof(t)))

sample : T -> [2]R
sample t = [ channel t , channel (t + 11025) ]

// intput to main = array of music notes? for left and right based on selecting via time
track : R -> [44100][2]R
track f = [ sample ((f * 44099) + k) | k <- _T ]
